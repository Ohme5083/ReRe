name: 02 - Deploy to Azure

on:
  workflow_call

env:
  IMAGE_NAME: ghcr.io/ohme5083/rere

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.IMAGE_NAME }}:latest
          file: ./ReRe.Ui/Dockerfile

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Azure VM via SSH with Docker Compose
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          password: ${{ secrets.VM_PASSWORD }}
          port: 22
          script: |
            echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ohme5083 --password-stdin

            mkdir -p ~/deploy/rere

            cat > ~/deploy/rere/docker-compose.yml <<EOF
            version: "3.8"
            services:
              sqlserver-rere:
                image: mcr.microsoft.com/mssql/server:2022-latest
                environment:
                  SA_PASSWORD: "toto12345*"
                  ACCEPT_EULA: "Y"
                ports:
                  - "1443:1443"
                networks:
                  - rerenet

              rere.ui:
                image: ghcr.io/ohme5083/rere:${{ github.sha }}
                environment:
                  - ConnectionStrings__DefaultConnection=Server=sqlserver-rere,1443;Database=ReReDb;User Id=sa;Password=toto12345*;Encrypt=False;TrustServerCertificate=True;
                depends_on:
                  - sqlserver-rere
                networks:
                  - rerenet
                ports:
                  - "5050:5050"

            networks:
              rerenet:
                driver: bridge
            EOF

            if ! command -v docker-compose &> /dev/null
            then
              echo "docker-compose non trouv√©, installation..."
              sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

            docker-compose -f ~/deploy/rere/docker-compose.yml down || true
            docker-compose -f ~/deploy/rere/docker-compose.yml up -d
